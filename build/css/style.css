@import url(http://fonts.googleapis.com/css?family=Roboto+Condensed);
@import url(http://fonts.googleapis.com/css?family=Oswald:700);
/*------------------------------------*\
    #BASE
\*------------------------------------*/
/**
* These files are located in the same folder as this file.
* This file is imported through global.scss
*/
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$g=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [g=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
* {
  box-sizing: border-box; }

.mt-x-small {
  margin-top: 5%; }

.mt-small {
  margin-top: 10%; }

.mt-medium {
  margin-top: 25%; }

.mt-large {
  margin-top: 30%; }

body {
  background-color: #f3eed9; }

h1, h2, h3, h4, h5, h6 {
  font-family: 'Oswald', sans-serif;
  color: #0c56b9; }

p, a, span, input {
  font-family: 'Roboto Condensed', sans-serif;
  font-size: 17px; }

p {
  color: #7d7c79; }

h1 {
  font-size: 2em; }

.allfacts {
  margin-top: 15px; }

.fact-list {
  line-height: 10px;
  font-size: 20px;
  color: #7d7c79; }

.fact-img {
  margin-right: 10px; }

form input {
  width: 100%;
  height: 100px;
  background-color: #F8C300;
  font-size: 70px;
  margin-top: 20px;
  color: white;
  border: none;
  padding: 20px; }

@media (max-width: 640px) {
  .half {
    display: block;
    clear: both;
    float: none;
    width: 100%;
    margin-left: auto;
    margin-right: auto; }
    .half:first-child {
      margin-left: auto; }
    .half:last-child {
      margin-right: auto; } }

.k-header {
  *zoom: 1;
  width: auto;
  max-width: 1;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  background-size: cover;
  position: relative;
  padding: 0px; }
  .k-header:before, .k-header:after {
    content: '';
    display: table; }
  .k-header:after {
    clear: both; }

.panda {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 48.5%;
  margin-left: 0%;
  margin-right: 3%;
  position: relative; }
  .panda:before, .panda:after {
    content: '';
    display: table; }
  .panda:after {
    clear: both; }
  .panda:last-child {
    margin-right: 0%; }

.full {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 100%;
  margin-left: 0%;
  margin-right: 3%; }
  .full:before, .full:after {
    content: '';
    display: table; }
  .full:after {
    clear: both; }
  .full:last-child {
    margin-right: 0%; }

.half {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 48.5%;
  margin-left: 0%;
  margin-right: 3%; }
  .half:before, .half:after {
    content: '';
    display: table; }
  .half:after {
    clear: both; }
  .half:last-child {
    margin-right: 0%; }

.one-third {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 31.33333%;
  margin-left: 0%;
  margin-right: 3%; }
  .one-third:before, .one-third:after {
    content: '';
    display: table; }
  .one-third:after {
    clear: both; }
  .one-third:last-child {
    margin-right: 0%; }

.two-third {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 65.66667%;
  margin-left: 0%;
  margin-right: 3%; }
  .two-third:before, .two-third:after {
    content: '';
    display: table; }
  .two-third:after {
    clear: both; }
  .two-third:last-child {
    margin-right: 0%; }

header {
  *zoom: 1;
  width: auto;
  max-width: 100%;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0; }
  header:before, header:after {
    content: '';
    display: table; }
  header:after {
    clear: both; }
  header .ebook {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 48.5%;
    margin-left: 0%;
    margin-right: 3%; }
    header .ebook:before, header .ebook:after {
      content: '';
      display: table; }
    header .ebook:after {
      clear: both; }
    header .ebook:last-child {
      margin-right: 0%; }
  header .triangle {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 48.5%;
    margin-left: 0%;
    margin-right: 3%; }
    header .triangle:before, header .triangle:after {
      content: '';
      display: table; }
    header .triangle:after {
      clear: both; }
    header .triangle:last-child {
      margin-right: 0%; }

.header {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 100%;
  margin-left: 0%;
  margin-right: 0%; }
  .header:before, .header:after {
    content: '';
    display: table; }
  .header:after {
    clear: both; }

main {
  *zoom: 1;
  width: auto;
  max-width: 1160px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0; }
  main:before, main:after {
    content: '';
    display: table; }
  main:after {
    clear: both; }

.wrapper {
  *zoom: 1;
  width: auto;
  max-width: 1160px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  *zoom: 1; }
  .wrapper:before, .wrapper:after {
    content: '';
    display: table; }
  .wrapper:after {
    clear: both; }
  .wrapper:before, .wrapper:after {
    content: '';
    display: table; }
  .wrapper:after {
    clear: both; }

.intro {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 45%;
  margin-left: 0%;
  margin-right: 10%; }
  .intro:before, .intro:after {
    content: '';
    display: table; }
  .intro:after {
    clear: both; }
  .intro:last-child {
    margin-right: 0%; }

.first-content {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 66.66667%;
  margin-left: 0%;
  margin-right: 0%;
  background-color: #f4e3a3;
  padding: 20px; }
  .first-content:before, .first-content:after {
    content: '';
    display: table; }
  .first-content:after {
    clear: both; }

.bluemaster {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 33.33333%;
  margin-left: 0%;
  margin-right: 0%; }
  .bluemaster:before, .bluemaster:after {
    content: '';
    display: table; }
  .bluemaster:after {
    clear: both; }

.perfectmen {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 33.33333%;
  margin-left: 0%;
  margin-right: 0%; }
  .perfectmen:before, .perfectmen:after {
    content: '';
    display: table; }
  .perfectmen:after {
    clear: both; }

.arrow {
  *zoom: 1;
  width: auto;
  max-width: 50px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  top: 50px; }
  .arrow:before, .arrow:after {
    content: '';
    display: table; }
  .arrow:after {
    clear: both; }

.middle-master {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 31.33333%;
  margin-left: 0%;
  margin-right: 3%; }
  .middle-master:before, .middle-master:after {
    content: '';
    display: table; }
  .middle-master:after {
    clear: both; }
  .middle-master:last-child {
    margin-right: 0%; }

.hidden {
  visibility: hidden; }

.master-bg {
  *zoom: 1;
  width: auto;
  max-width: 1160px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0; }
  .master-bg:before, .master-bg:after {
    content: '';
    display: table; }
  .master-bg:after {
    clear: both; }

.infact {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 17.6%;
  margin-left: 0%;
  margin-right: 3%; }
  .infact:before, .infact:after {
    content: '';
    display: table; }
  .infact:after {
    clear: both; }
  .infact:last-child {
    margin-right: 0%; }

.allfacts {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 79.4%;
  margin-left: 0%;
  margin-right: 3%; }
  .allfacts:before, .allfacts:after {
    content: '';
    display: table; }
  .allfacts:after {
    clear: both; }
  .allfacts:last-child {
    margin-right: 0%; }

.cantmiss {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 33.33333%;
  margin-left: 0%;
  margin-right: 0%; }
  .cantmiss:before, .cantmiss:after {
    content: '';
    display: table; }
  .cantmiss:after {
    clear: both; }

.cantmiss-2 {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 66.66667%;
  margin-left: 0%;
  margin-right: 0%; }
  .cantmiss-2:before, .cantmiss-2:after {
    content: '';
    display: table; }
  .cantmiss-2:after {
    clear: both; }

.expand-list {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 100%;
  margin-left: 0%;
  margin-right: 3%; }
  .expand-list:before, .expand-list:after {
    content: '';
    display: table; }
  .expand-list:after {
    clear: both; }
  .expand-list:last-child {
    margin-right: 0%; }

.test-mo {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 22.75%;
  margin-left: 0%;
  margin-right: 3%; }
  .test-mo:before, .test-mo:after {
    content: '';
    display: table; }
  .test-mo:after {
    clear: both; }
  .test-mo:last-child {
    margin-right: 0%; }

.signupf {
  *zoom: 1;
  width: auto;
  max-width: 800px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0; }
  .signupf:before, .signupf:after {
    content: '';
    display: table; }
  .signupf:after {
    clear: both; }

@media (max-width: 640px) {
  .intro, .infact, .middle-master, .test-mo, .bluemaster, .first-content, .cantmiss, .cantmiss-2, .perfectmen, .half, .stack {
    display: block;
    clear: both;
    float: none;
    width: 100%;
    margin-left: auto;
    margin-right: auto; }
    .intro:first-child, .infact:first-child, .middle-master:first-child, .test-mo:first-child, .bluemaster:first-child, .first-content:first-child, .cantmiss:first-child, .cantmiss-2:first-child, .perfectmen:first-child, .half:first-child, .stack:first-child {
      margin-left: auto; }
    .intro:last-child, .infact:last-child, .middle-master:last-child, .test-mo:last-child, .bluemaster:last-child, .first-content:last-child, .cantmiss:last-child, .cantmiss-2:last-child, .perfectmen:last-child, .half:last-child, .stack:last-child {
      margin-right: auto; }
  .allfacts {
    display: block;
    clear: both;
    float: none;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    display: none; }
    .allfacts:first-child {
      margin-left: auto; }
    .allfacts:last-child {
      margin-right: auto; } }
